diff --git a/.gitignore b/.gitignore
index ea8c4bf..df38aba 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1 +1,2 @@
 /target
+generated
diff --git a/Greeting b/Greeting
new file mode 100755
index 0000000..8cf7c23
--- /dev/null
+++ b/Greeting
@@ -0,0 +1 @@
+mvn exec:java -Dexec.mainClass=com.paulojeronimo.web3j.Greeting -Dexec.args="$wallet web3jtest"
diff --git a/src/main/java/com/paulojeronimo/web3j/Greeting.java b/src/main/java/com/paulojeronimo/web3j/Greeting.java
new file mode 100644
index 0000000..3d13809
--- /dev/null
+++ b/src/main/java/com/paulojeronimo/web3j/Greeting.java
@@ -0,0 +1,42 @@
+package com.paulojeronimo.web3j;
+
+import java.io.IOException;
+import java.math.BigInteger;
+import java.util.concurrent.ExecutionException;
+
+import org.web3j.abi.datatypes.Utf8String;
+import org.web3j.crypto.CipherException;
+import org.web3j.crypto.Credentials;
+import org.web3j.crypto.WalletUtils;
+import org.web3j.protocol.Web3j;
+import org.web3j.protocol.core.methods.response.TransactionReceipt;
+import org.web3j.protocol.http.HttpService;
+import org.web3j.tx.Contract;
+import org.web3j.tx.ManagedTransaction;
+
+import com.paulojeronimo.web3j.generated.Greeter;
+
+public class Greeting {
+    public static void main(String[] args) throws IOException, CipherException, ExecutionException, InterruptedException {
+        String walletSource = args[0];
+        String walletFilePassword = args[1];
+
+        Web3j web3j = Web3j.build(new HttpService());
+
+        Credentials credentials = WalletUtils.loadCredentials(walletFilePassword, walletSource);
+
+        Greeter contract = Greeter.deploy(
+                web3j, credentials, ManagedTransaction.GAS_PRICE, Contract.GAS_LIMIT,
+                BigInteger.ZERO, new Utf8String("Greetings to the blockchain world from Paulo Jeronimo!")).get();
+
+        Utf8String greeting = contract.greet().get();
+        System.out.println(greeting.getValue());
+
+        TransactionReceipt transactionReceipt =
+                contract.newGreeting(new Utf8String("new Greeting from Paulo Jeronimo!")).get();
+        System.out.println(transactionReceipt.getTransactionHash());
+
+        Utf8String newGreeting = contract.greet().get();
+        System.out.println(newGreeting.getValue());
+    }
+}
diff --git a/src/main/resources/Greeter.sol b/src/main/resources/Greeter.sol
new file mode 100644
index 0000000..38f929e
--- /dev/null
+++ b/src/main/resources/Greeter.sol
@@ -0,0 +1,21 @@
+pragma solidity ^0.4.17;
+contract mortal {
+    address owner;
+    function mortal() public { owner = msg.sender; }
+    function kill() public { if (msg.sender == owner) selfdestruct(owner); }
+}
+contract greeter is mortal {
+    string greeting;
+    // constructor
+    function greeter(string _greeting) public {
+        greeting = _greeting;
+    }
+    // getter
+    function greet() public constant returns (string) {
+        return greeting;
+    }
+    //setter
+    function newGreeting(string _greeting) public {
+        greeting = _greeting;
+    }
+}
